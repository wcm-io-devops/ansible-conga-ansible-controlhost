# Enables / disables the maven role dependency
controlhost_dependency_maven: true

# Enables / disables the java role dependency
controlhost_dependency_java: true

# Enables / disables the epel role dependency
controlhost_dependency_epel: true

# Enables / disables the terraform role dependency
controlhost_dependency_terraform: true

# The user on the controlhost
controlhost_user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
# The users group on the controlhost
controlhost_group: "{{ controlhost_user }}"
# The home directory of the user
controlhost_user_home: "/home/{{ controlhost_user }}"

# Path to the Maven directory
controlhost_maven_path: "{{ controlhost_user_home }}/.m2"
# Path to Maven settings.xml
controlhost_maven_settings_path: "{{ controlhost_maven_path }}/settings.xml"
# Path to Maven settings-security.xml
controlhost_maven_settings_security_path: "{{ controlhost_maven_path }}/settings-security.xml"
# Threads used by maven when downloading artifacts
controlhost_maven_artifact_threads: 5

# When set, a Maven settings-security.xml will be created with the encrypted master password and the credentials for the controlhost_maven_repositories
# will be encrypted using the Maven master password
#controlhost_maven_master_password:

# Path to the .npmrc
controlhost_nodejs_npmrc_path: "{{ controlhost_user_home }}/.npmrc"
# Controls the "always-auth" parameter in .npmrc
controlhost_nodejs_npmrc_always_auth: true
# When registries are configured the npmrc will be provisioned. At the moment only one registry can be defined.
# The username and password have to be provided in plan. The role will taking care of creating the auth token.
# controlhost_nodejs_npmrc_registries:
  #- registry:
  #  username: # plain username
  #  password: # plain password

# When set, the ANSIBLE_VAULT_PASSWORD_FILE environment variable in the .bashrc is set
#controlhost_vault_pass_path: "{{ controlhost_user_home }}/.ansible/.vault_pass"

# When set the specified file will be copied to the controlhost to 'controlhost_vault_pass_path'
#controlhost_vault_pass_src:

# The path of the aws credentials file. Works together with: `controlhost_aws_credentials_src`
controlhost_aws_credentials_path: "{{ controlhost_user_home }}/.aws/credentials"

# When set the specified file will be copied to the control to `controlhost_aws_credential_path`
#controlhost_aws_credentials_src:

# When set the bashrc will export EDITOR with this value
#controlhost_default_editor: "nano"

# Path to the bash/shell run commands file for provisioning ANSIBLE_VAULT_PASSWORD_FILE and EDITOR.
controlhost_bashrc: "{{ controlhost_user_home }}/.bashrc"

# List of Maven repositories to be configured in Maven settings.xml
controlhost_maven_repositories:
  - id: central
    url: https://repo.maven.apache.org/maven2/
  - id: adobe-public-releases
    url: https://repo.adobe.com/nexus/content/groups/public
    releases:
      enabled: "true"
      updatePolicy: "never"
    snapshots:
      enabled: "false"

# Repository definition
# - id: [REPO-ID]
#   url: [REPO-URL]
#   username: [USERNAME] # optional
#   password: [PASSWORD] # optional
#   releases:  # (optional)
#     [KEY]:[VALUE] # will be converted to <key>value</key>
#   snapshots: # (optional)
#     [KEY]:[VALUE] # will be converted to <key>value</key>

# When set the given version of Ansible will be installed on the controlhost
#controlhost_ansible_version: 2.5.6

# Controls if pip will be executed using the --upgrade option
controlhost_packages_pip_upgrade: true

# enables / disables pip package installation
controlhost_packages_pip_enabled: true

# Pip packages to install
# pip package definition as of https://docs.ansible.com/ansible/latest/modules/pip_module.html
controlhost_packages_pip:
  - markupsafe
  - jmespath
  - cffi
  - cryptography
  - boto
  - lxml
  - boto3
  - rsa
  - colorama
  - botocore
  - s3transfer
  - awscli

# List of os packages to install on the controlhost. OS specific, see variable definition in the vars folder.
# controlhost_packages_os: []

# enables / disables os package installation
controlhost_packages_os_enabled: true
