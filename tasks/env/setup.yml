- name: "env : setup : Configure default editor"
  blockinfile:
    path: "{{ controlhost_bashrc }}"
    block: "export EDITOR={{ controlhost_default_editor }}"
    marker: "# {mark} editor ANSIBLE MANAGED BLOCK"
    create: yes
  when: controlhost_default_editor is defined

- name: "env : setup : Set environment variable ANSIBLE_VAULT_PASSWORD_FILE to ansible vault pass"
  block:
  - name: "env : setup : Configure ansible vault environment variable"
    blockinfile:
      path: "{{ controlhost_bashrc }}"
      block: "export ANSIBLE_VAULT_PASSWORD_FILE={{ controlhost_vault_pass_path }}"
      marker: "# {mark} ansible-vault ANSIBLE MANAGED BLOCK"
      create: yes

  - name: "env : setup : Print hint for sourcing of .bash_profile"
    debug:
      msg: >-
        Make sure to execute '{{ controlhost_bashrc }}' to ensure
        that environment variable 'ANSIBLE_VAULT_PASSWORD_FILE' is present
  when: controlhost_vault_pass_path is defined

- name: "env : setup : Set up Terraform convenience utilities"
  block:
    - name: "env : setup : Set up Bash aliases"
      blockinfile:
        path: "{{ controlhost_bashrc }}"
        marker: "# {mark} Terraform aliases ANSIBLE MANAGED BLOCK"
        block: |
          alias tfp="terraform plan -out plans/plan"
          alias tfa="terraform apply plans/plan"
          alias tfi="terraform init"

    - name: "env : setup : Set terraform_project_dir fact"
      set_fact:
        terraform_project_dir: "terraform-{{ controlhost_terraform_project_name | default('sample-project') }}"

    - name: "env : setup : Set up Bash aliases"
      blockinfile:
        path: "{{ controlhost_bashrc }}"
        marker: "# {mark} Terraform data dir ANSIBLE MANAGED BLOCK"
        block: |
          export TF_DATA_DIR={{ controlhost_user_home }}/.terraform.d/{{ terraform_project_dir }}/
  when: controlhost_terraform_utilities|bool is true